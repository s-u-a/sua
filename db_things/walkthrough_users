#!/usr/bin/php
<?php
	if(!isset($errlog)) $errlog = STDERR;

	$USE_OB = false;
	require_once('../engine/include.php');

	set_time_limit(0);

	if(!defined('DONT_EXIT'))
	{
		if(!isset($_SERVER['argv'][1]))
		{
			fputs(STDERR, "Usage: ".$_SERVER['argv'][0]." [Database dir]\n");
			exit(1);
		}
		else
			define_globals($_SERVER['argv'][1]);
	}
	else ob_end_clean();

	$ges_ress = array(0, 0, 0, 0, 0);

	# Rohstoffe aller Planeten aller Benutzer zusammenzaehlen
	# Alte Nachrichten loeschen
	$deleted_messages = 0;
	$processed_messages = array();

	global $message_type_times;
	$max_ages = $message_type_times;
	foreach($max_ages as $k=>$v) $max_ages[$k] *= 86400;

	$dh = opendir(DB_PLAYERS);
	while(($filename = readdir($dh)) !== false)
	{
		if(!is_file(DB_PLAYERS.'/'.$filename))
			continue;

		$user = Classes::User(urldecode($filename));
		if(!$user->getStatus()) continue;

		$last_activity = $user->getLastActivity();
		if($last_activity !== false)
			$days = ceil((time()-$last_activity)/86400);
		else
			$days = ceil((time()-$user->getRegistrationTime())/86400);

		$today = date('Y-m-d');

		# Wenn der Spieler inaktiv ist, loeschen
		if($last_activity !== false)
		{
			if($user->umode())
			{
				if($days == 175 && $user->lastMailSent() != $today) # 25 Wochen: Nachricht
				{
					if($user->checkSetting('email'))
					{
						mail($user->checkSetting('email'), "Accountinaktivit\xc3\xa4t in S-U-A", "Sie erhalten diese Nachricht, weil Sie sich seit geraumer Zeit nicht mehr in Stars Under Attack angemeldet haben. Sie haben zwei Wochen Zeit, sich anzumelden, danach wird Ihr Account einer automatischen L\xc3\xb6schung unterzogen.\n\nDas Spiel erreichen Sie unter http://s-u-a.net/ \xe2\x80\x93 Ihr Benutzername lautet ".$user->getName(), "Content-Type: text/plain;\r\n  charset=\"utf-8\"\r\nFrom: ".EMAIL_FROM."\r\nReply-To: ".EMAIL_FROM);
						$user->lastMailSent($today);
					}
				}
				elseif($days >= 189) # 27 Wochen: Loeschung
				{
					if($user->destroy())
						fputs($errlog, "Deleted user `".$user->getName()."' because of inactivity.\n");
					else
						fputs($errlog, "Error: Couldn't delete user `".$user->getName()."'.\n");
					continue;
				}
			}
			else
			{
				if(($days == 21 || $days == 34) && $user->lastMailSent() != $today)
				{
					if($user->checkSetting('email'))
					{
						mail($user->checkSetting('email'), "Accountinaktivit\xc3\xa4t in S-U-A", "Sie erhalten diese Nachricht, weil Sie sich seit geraumer Zeit nicht mehr in Stars Under Attack angemeldet haben. Sie haben ".(($days == 34) ? 'einen Tag' : 'zwei Wochen')." Zeit, sich anzumelden, danach wird Ihr Account einer automatischen L\xc3\xb6schung unterzogen.\n\nDas Spiel erreichen Sie unter http://s-u-a.net/ \xe2\x80\x93 Ihr Benutzername lautet ".$user->getName(), "Content-Type: text/plain;\r\n  charset=\"utf-8\"\r\nFrom: ".EMAIL_FROM."\r\nReply-To: ".EMAIL_FROM);
						$user->lastMailSent($today);
					}
				}
				elseif($days >= 35)
				{
					if($user->destroy())
						fputs($errlog, "Deleted user `".$user->getName()."' because of inactivity.\n");
					else
						fputs($errlog, "Error: Couldn't delete user `".$user->getName()."'.\n");
					continue;
				}
			}
		}
		elseif($days == 7 && $user->lastMailSent() != $today)
		{
			if($user->checkSetting('email'))
				mail($user->checkSetting('email'), "Accountinaktivit\xc3\xa4t in S-U-A", "Sie erhalten diese Nachricht, weil Sie sich seit geraumer Zeit nicht mehr in Stars Under Attack angemeldet haben. Sie haben eine Woche Zeit, sich anzumelden, danach wird Ihr Account einer automatischen L\xc3\xb6schung unterzogen.\n\nDas Spiel erreichen Sie unter http://s-u-a.net/ \xe2\x80\x93 Ihr Benutzername lautet ".$user->getName(), "Content-Type: text/plain;\r\n  charset=\"utf-8\"\r\nFrom: ".EMAIL_FROM."\r\nReply-To: ".EMAIL_FROM);
		}
		elseif($days >= 14)
		{
			if($user->destroy())
				fputs($errlog, "Deleted user `".$user->getName()."' because of inactivity.\n");
			else
				fputs($errlog, "Error: Couldn't delete user `".$user->getName()."'.\n");
			continue;
		}

		$planets = $user->getPlanetsList();
		foreach($planets as $planet)
		{
			$user->setActivePlanet($planet);
			$ress = $user->getRess();
			unset($ress[5]); # Energie soll nicht miteinberechnet werden
			$min = max($ress);
			if($min != 0)
			{
				foreach($ress as $val)
				{
					if($val < $min && $val != 0) $min = $val;
				}

				$ress[0] /= $min;
				$ress[1] /= $min;
				$ress[2] /= $min;
				$ress[3] /= $min;
				$ress[4] /= $min;
			}

			$ress[0] = pow($ress[0], 1/($days+1));
			$ress[1] = pow($ress[1], 1/($days+1));
			$ress[2] = pow($ress[2], 1/($days+1));
			$ress[3] = pow($ress[3], 1/($days+1));
			$ress[4] = pow($ress[4], 1/($days+1));

			$ges_ress[0] += $ress[0];
			$ges_ress[1] += $ress[1];
			$ges_ress[2] += $ress[2];
			$ges_ress[3] += $ress[3];
			$ges_ress[4] += $ress[4];
		}

		$message_categories = $user->getMessageCategoriesList();
		foreach($message_categories as $category)
		{
			$max_diff = $max_ages[$category];
			$messages_list = $user->getMessagesList($category);
			foreach($messages_list as $message_id)
			{
				$processed_messages[$message_id] = true;
				if($user->checkMessageStatus($message_id, $category))
					continue; # Ungelesen / Archiviert
				$message_obj = Classes::Message($message_id);
				if(!$message_obj->getStatus() || (time()-$message_obj->getTime()) > $max_diff)
				{
					$user->removeMessage($message_id, $category);
					$deleted_messages++;
				}
			}
		}

		unset($user);
		Classes::resetInstances();
	}
	closedir($dh);

	# Kurs berechnen
	$min = max($ges_ress);
	if($min != 0)
	{
		foreach($ges_ress as $val)
		{
			if($val < $min && $val != 0)
				$min = $val;
		}
	}

	if($min == 0)
		$kurs = array(10, 5, 3.75, 2.5, 1);
	else
	{
		$kurs = array();
		$kurs[0] = $ges_ress[0]/$min;
		$kurs[1] = $ges_ress[1]/$min;
		$kurs[2] = $ges_ress[2]/$min;
		$kurs[3] = $ges_ress[3]/$min;
		$kurs[4] = $ges_ress[4]/$min;

		foreach($kurs as $key=>$val)
		{
			if($val == 0)
				$kurs[$key] = 1;
		}
	}

	unset($ges_ress);

	# Kurs schreiben
	$handelskurs = preg_split("/\r\n|\r|\n/", file_get_contents(DB_HANDELSKURS));
	$handelskurs[0] = $kurs[0];
	$handelskurs[1] = $kurs[1];
	$handelskurs[2] = $kurs[2];
	$handelskurs[3] = $kurs[3];
	$handelskurs[4] = $kurs[4];

	$fh = fopen(DB_HANDELSKURS, 'w');
	flock($fh, LOCK_EX);

	fwrite($fh, implode("\n", $handelskurs));

	flock($fh, LOCK_UN);
	fclose($fh);

	fputs($errlog, "Handelskurs recalculated.\n");


	# Nachrichten, die niemandem gehoeren, loeschen

	$dh = opendir(DB_MESSAGES);
	while(($fname = readdir($dh)) !== false)
	{
		if($fname[0] == '.') continue;

		$fname = urldecode($fname);

		if(!isset($processed_messages[$fname]))
		{
			$message = Classes::Message($fname);
			$message->destroy();
		}
	}
	closedir($dh);

	$processed_messages = count($processed_messages);
	Classes::resetInstances();

	fputs($errlog, "Checked ".$processed_messages." messages.\n");
	fputs($errlog, "Deleted ".$deleted_messages." messages.\n");


	# Oeffentliche Nachrichten loeschen

	$processed_messages_public = 0;
	$deleted_messages_public = 0;

	global $public_messages_time;
	$max_age = $public_messages_time*86400;
	$dh = opendir(DB_MESSAGES_PUBLIC);
	while(($fname = readdir($dh)) !== false)
	{
		if($fname[0] == '.') continue;

		$fname = urldecode($fname);

		$message = Classes::PublicMessage($fname);
		if(!$message->getStatus()) continue;
		else $processed_messages_public++;

		if(time()-$message->getLastViewTime() > $max_age)
		{
			$message->destroy();
			$deleted_messages_public++;
		}
	}
	closedir($dh);

	Classes::resetInstances();

	fputs($errlog, "Checked ".$processed_messages_public." public messages.\n");
	fputs($errlog, "Deleted ".$deleted_messages_public." public messages.\n");

	if(!defined('DONT_EXIT')) exit(0);
?>