#!/usr/bin/php
<?php
	if(!isset($_SERVER['argv'][1]))
	{
		echo "Usage: ".$_SERVER['argv'][0]." [Database dir]\n";
		exit(1);
	}
	else
		$_SERVER['SUA_DB_DIR'] = $_SERVER['argv'][1];
	
	$USE_OB = false;
	require_once('include.php');
	require_once('../login/scripts/eventhandler.php');

	header('Content-type: text/plain');

	echo date('Y-m-d, H:i:s')." -- Eventhandler started.\n";

	$last_handelskurs = date('Y-m-d');

	while(true)
	{
		clearstatcache();

		lock_database();

		$users = array();

		$filesize = filesize(EVENT_FILE);

		$fh = fopen(EVENT_FILE, 'r+');
		flock($fh, LOCK_EX);

		while(ftell($fh) < $filesize)
		{
			$line = fread($fh, 32);

			$time_bin = '';
			$time_bin .= add_nulls(decbin(ord(substr($line, 0, 1))), 8);
			$time_bin .= add_nulls(decbin(ord(substr($line, 1, 1))), 8);
			$time_bin .= add_nulls(decbin(ord(substr($line, 2, 1))), 8);
			$time_bin .= add_nulls(decbin(ord(substr($line, 3, 1))), 8);
			$time_bin .= add_nulls(decbin(ord(substr($line, 4, 1))), 8);
			$time_bin .= add_nulls(decbin(ord(substr($line, 5, 1))), 8);
			$time_bin .= add_nulls(decbin(ord(substr($line, 6, 1))), 8);
			$time_bin .= add_nulls(decbin(ord(substr($line, 7, 1))), 8);
			$time = base_convert($time_bin, 2, 10);
			unset($time_bin);

			$username = trim(substr($line, 8));

			if($time < time())
			{
				# Event muss abgearbeitet werden
				$users[$username] = true;
				fseek($fh, -32, SEEK_CUR);
				fwrite($fh, '                                ');
			}
		}
		flock($fh, LOCK_UN);
		fclose($fh);

		foreach($users as $username=>$bla)
		{
			eventhandler::run_eventhandler($username);
			echo date('Y-m-d, H:i:s');
			echo ' -- ';
			echo $username;
			echo "\n";
		}

		if(date('H')*3600+date('i')*60+60 > 16200 && $last_handelskurs != date('Y-m-d')) // 4:30 Uhr
		{
			echo "\n".date('Y-m-d, H:i:s')." -- Recalculating Handelskurs...\n";
			system(s_root.'/db_things/calc_ges_ress');
			echo date('Y-m-d, H:i:s')." -- Handelskurs recalculated.\n\n";

			delete_old_messages();

			$last_handelskurs = date('Y-m-d');
		}

		unlock_database();

		sleep(EVENTHANDLER_INTERVAL);
	}

	function delete_old_messages()
	{
		global $message_type_times;

		$messages_deleted = 0;

		$dh = opendir(DB_MESSAGES);
		while(($fname = readdir($dh)) !== false)
		{
			if(substr($fname, 0, 1) == '.' || !is_file(DB_MESSAGES.'/'.$fname) || !is_readable(DB_MESSAGES.'/'.$fname))
				continue;

			$message_array = unserialize(gzuncompress(file_get_contents(DB_MESSAGES.'/'.$fname)));

			if(!isset($message_array['time']))
				continue;

			$allow_delete = true;

			foreach($message_array['users'] as $user=>$type)
			{
				$that_user_array = get_user_array($user);
				if(!$that_user_array || !isset($that_user_array['messages'][$type][$fname]))
					continue;
				if($that_user_array['messages'][$type][$fname])
				{
					$allow_delete = false;
					break;
				}
			}

			if(!$allow_delete)
				continue;

			$max_age = 0;
			foreach($message_array['users'] as $user=>$type)
			{
				if($message_type_times[$type] > $max_age)
					$max_age = $message_type_times[$type];
			}

			$age = time()-$message_array['time'];
			if($age/86400 > $max_age && unlink(DB_MESSAGES.'/'.$fname))
				$messages_deleted++;
		}
		closedir($dh);

		echo date('Y-m-d, H:i:s').' -- '.$messages_deleted.' message';
		if($messages_deleted != 1)
			echo 's';
		echo " deleted.\n";
	}
?>
